# .github/workflows/deploy-log-retrieval.yml
name: Deploy Retrieve Logs Lambda (Dev)

on:
  pull_request:
    branches: [develop]
    types:
      - closed
  workflow_dispatch:

env:
  CHANNEL_ID: "C08T7JCKXEY"
  ENV: "DEV"
  LAMBDA_SERVICE: "Retrieve-logs-lambda"

jobs:
  deploy:
    if: |
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'deploy_retrieve_logs')
    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME_GITHUB }}
          aws-region: us-east-1

      - name: Install Lambda dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --target ./package -r get_log/requirements.txt

      - name: Package Lambda function
        run: |
          cd package
          zip -r ../retrieve_logs.zip .
          cd ..
          zip -j retrieve_logs.zip get_log/*.py

      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code \
            --function-name dev-retrieve-logs \
            --zip-file fileb://retrieve_logs.zip

      - name: Slack Notification (Success)
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: DeployNotification
          SLACK_TITLE: Lambda Deployment
          SLACK_MESSAGE: 'Deployment success in ${{ env.ENV }} for ${{ env.LAMBDA_SERVICE }}'
          SLACK_COLOR: good
          SLACK_FOOTER: ${{ github.repository }} | ${{ github.ref }} | <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Workflow Run>
          SLACK_ICON_EMOJI: ':rocket:'

      - name: Slack Notification (Failure)
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: DeployNotification
          SLACK_TITLE: Lambda Deployment
          SLACK_MESSAGE: 'Deployment error in ${{ env.ENV }} for ${{ env.LAMBDA_SERVICE }}'
          SLACK_COLOR: danger
          SLACK_FOOTER: ${{ github.repository }} | ${{ github.ref }} | <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Workflow Run>
          SLACK_ICON_EMOJI: ':x:'

      - name: Print event JSON
        run: echo "${{ toJson(github.event) }}"



      # -----------------------------------------------------------
      # Optional: Notify on PR with a comment when the workflow finishes.
      # To use, just remove the '#' from these lines.
      # This will add a comment to the pull request so anyone watching
      # (with email notifications enabled) gets notified.
      # You can mention specific users or teams by changing '@your-team' below.
      # -----------------------------------------------------------
      # - name: Comment on PR for GitHub notifications
      #   if: always()  # Runs even if the job fails
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       github.rest.issues.createComment({
      #         issue_number: context.payload.pull_request.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: 'ðŸš€ Deployment finished for `${{ env.LAMBDA_SERVICE }}` in `${{ env.ENV }}`!\n\nCheck the details here: [Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\ncc: @your-team'
      #       })


